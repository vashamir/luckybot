import random
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage

API_TOKEN = "5992712609:AAFoRvbM_8uODwZerHegUZCEiGUJU7jrQXQ" # tg_bot
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
kb = ReplyKeyboardMarkup(resize_keyboard=True)
kb.add(KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ªüí∏'))


@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await bot.delete_message(message.chat.id, message.message_id-1)
    await message.answer(text='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å—Ç–∞—Ç—å –±–æ–≥–∞—á–µ!üí∏ \n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –∫–æ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏')

@dp.message_handler(text=['–ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ªüí∏'])
async def give_signal(message: types.Message):
    numb = round(random.uniform(1, 5), 2)
    await message.answer(text=f'{numb}ü§ë', reply_markup=kb)

@dp.message_handler()
async def process_message(message: types.Message):
    msgtxt = message.text
    if msgtxt=='GaUm48gO3gk6PYhF2i8':
        await message.answer(text="–î–æ—Å—Ç—É–ø –ø–æ–ª—É—á–µ–Ω \n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—èü§ë", reply_markup=kb)
    else:
        await message.answer(text='‚ùå–ù–µ–≤–µ—Ä–Ω–æ!‚ùå \n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–æ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏')



if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)